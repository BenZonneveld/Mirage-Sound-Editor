#include "MidiNative.h" // class MidiNativeIn, MidiNativeOut
//#include // cout
//#include // _kbhit();

class PrintInput : public MidiNativeIn
{
	public:

	
	void in(unsigned long data,unsigned long timestamp)
	{
		u.ul.data;
		cout<<"MIDI input: "<<(unsigned int)u.uchars[0]<<" "<<(unsigned int)u.uchars[1]<<" "<<(unsigned int)u.uchars[2]<<" at "<<
	}

	void inlong(char*data,unsigned long length)
	{
		cout<<"MIDI input: sysex:";
		for (unsigned long x=0;x
		cout<<" "<<(unsigned int)data[x];
		cout<
		cout.flush();
	}

};


void main()
{
	PrintInput input;
	MidiNativeOut output;
	char name[40];
	unsigned int x; // apart definition to keep it ANSI compatible (long live Microsoft Visual C++...).

	cout<<"You have these MIDI input devices installed:\n";
	for (x=0;x
	{
		input.devicename(x,name);
		cout<<<": "<<
	}

	cout<<"You have these MIDI output devices installed:\n";
	for (x=0;x
	{
		output.devicename(x,name);
		cout<<<": "<<
	}

	unsigned int inport=6; // change here
	input.devicename(inport,name);
	cout<<"\n\nNow printing all input from port "<<<" ("<<<").\n";
	cout<<"Press enter to break the loop.\n\n";
	cout.flush();

	input.setport(inport);
	input.open();
	while (!_kbhit()) Sleep(0);
	// deconstructors stop the input automatically
}