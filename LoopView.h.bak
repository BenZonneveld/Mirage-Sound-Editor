// LoopView.h : interface of the CLoopView class
//


#pragma once

//class CMirageEditorCntrItem;

class CLoopView : public CView
{
protected: // create from serialization only
	DECLARE_DYNCREATE(CLoopView)

// Attributes
public:
	CLoopView();
	CMirageEditorDoc* GetDocument() const
		{return m_LoopDocView; } //const;
	// m_pSelection holds the selection to the current CMirageEditorCntrItem.
	// For many applications, such a member variable isn't adequate to
	//  represent a selection, such as a multiple selection or a selection
	//  of objects that are not CMirageEditorCntrItem objects.  This selection
	//  mechanism is provided just to help you get started
	CMirageEditorDoc* m_LoopDocView;

// Operations
public:

// Overrides
public:
	virtual void OnDraw(CDC* pDC);  // overridden to draw this view
	virtual BOOL PreCreateWindow(CREATESTRUCT& cs);
	virtual int OnMouseActivate(CWnd *pDesktopWnd,UINT nHitTest,UINT message); // Prevent assertion

protected:
	virtual void OnInitialUpdate(); // called first time after construct

// Implementation
public:
	virtual ~CLoopView();
#ifdef _DEBUG
	virtual void AssertValid() const;
	virtual void Dump(CDumpContext& dc) const;
#endif

protected:

// Generated message map functions
protected:
	DECLARE_MESSAGE_MAP()
public:
};

#ifndef _DEBUG  // debug version in Mirage EditorView.cpp
inline CMirageEditorDoc* CLoopView::GetDocument() const
   { return reinterpret_cast<CMirageEditorDoc*>(m_pDocument); }
#endif

